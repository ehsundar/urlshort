// Code generated by sqlc. DO NOT EDIT.
// source: query.sql

package pg

import (
	"context"
)

const create = `-- name: Create :one
insert into links(short, long)
values ($1, $2)
returning short
`

type CreateParams struct {
	Short string
	Long  string
}

func (q *Queries) Create(ctx context.Context, arg CreateParams) (string, error) {
	row := q.db.QueryRowContext(ctx, create, arg.Short, arg.Long)
	var short string
	err := row.Scan(&short)
	return short, err
}

const getLong = `-- name: GetLong :one
select long
from links
where short = $1
limit 1
`

func (q *Queries) GetLong(ctx context.Context, short string) (string, error) {
	row := q.db.QueryRowContext(ctx, getLong, short)
	var long string
	err := row.Scan(&long)
	return long, err
}

const revoke = `-- name: Revoke :exec
delete
from links
where short = $1
`

func (q *Queries) Revoke(ctx context.Context, short string) error {
	_, err := q.db.ExecContext(ctx, revoke, short)
	return err
}
